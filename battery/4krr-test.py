'''
1. take in new data
2. normalize according to mean and std of training data
3. generate composite features generated by model
4. load saved model and apply to new data
5. save new processed inputs and results
'''

import numpy as np
import pandas as pd

from sklearn.kernel_ridge import KernelRidge
from sklearn.model_selection import train_test_split
from sklearn.model_selection import GridSearchCV
from sklearn.preprocessing import StandardScaler

from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score

import pickle

clf = pickle.load(open("models/krr_no_compound.sav", 'rb'))

X_train = pd.read_csv("step/composite_feature_analysis.csv")

res_test = pd.DataFrame(index=X_train.index )

res_test["pred(y)"] = clf.predict(X_train)
res_test.to_csv("res/no-comp/krr_no_compound_step_test.csv")